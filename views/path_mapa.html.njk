<html lang="pt-br">
<head>
<link rel="stylesheet" href="/css/maps.css">

<head>
<body>
    <div style="background-image: url(/icons/cluster.png); background-size: cover; background-position: 0px 0px; height: 32px; line-height: 32px; width: 32px; text-align: center; cursor: pointer; top: -125.323px; left: 77.1532px; color: black; position: absolute; font-size: 11px; font-family: Arial, sans-serif; font-weight: bold;">4</div>
    <div id="map" style="width:100%"></div>
</body>
</html>
  <script type="text/javascript" src="/js/base_data.js"></script>

    <script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDkK8945ckkbgGP93QtliiGL-ea84WJ8vo&callback=initMap">
    </script>
    <script>
    console.log('teste')
    var map;
        function show_map(dados) {
            console.log("vai mostrar mapa", document.getElementById('map'))
            map = new google.maps.Map(document.getElementById('map'), {
                center: dados[0],
                zoom: 16
            });
            show_line(dados)

        }
        function initMap() {
            let url = base_url + 'path/detalhes/{{id}}';
            console.log('url', url)
                fetch(url)
                    .then(res => res.json())
                    .then((path) => {
                            path=path[0]
                            console.log('path:',path)
                            var flightPlanCoordinates = justLatLng(path.gps)
                            show_map(flightPlanCoordinates)

                    
                    })
                    .catch(err => { throw err });

        }

        function show_line(flightPlanCoordinates){
            var flightPath = new google.maps.Polyline({
                path: flightPlanCoordinates,
                geodesic: true,
                strokeColor: '#FF0000',
                strokeOpacity: 1.0,
                strokeWeight: 5
            });
            flightPath.setMap(map);
        }
      
        function justLatLng(data) {
            let LatLng = []
            data.forEach(piece => {
                LatLng.push({ lat: parseFloat(piece.lat), lng: parseFloat(piece.lng) })
            })
            return LatLng;
        }

    </script>